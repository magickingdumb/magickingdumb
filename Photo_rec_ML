import tensorflow as tf
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Load and preprocess training data
train_data = ImageDataGenerator(rescale=1/255) 

train_generator = train_data.flow_from_directory(
        'dataset/train', 
        target_size=(300, 300),
        batch_size=32,
        class_mode='binary')

# Build convolutional neural network 
cnn_model = Sequential()
cnn_model.add(Conv2D(32, 3, activation='relu', input_shape=(300, 300, 3)))
cnn_model.add(MaxPooling2D(2, 2)) 

cnn_model.add(Conv2D(64, 3, activation='relu'))
cnn_model.add(MaxPooling2D(2, 2))

cnn_model.add(Conv2D(128, 3, activation='relu'))  
cnn_model.add(MaxPooling2D(2, 2))

cnn_model.add(Flatten())
cnn_model.add(Dense(512, activation='relu'))
cnn_model.add(Dense(1, activation='sigmoid'))

# Compile and train model
cnn_model.compile(loss='binary_crossentropy', 
              optimizer='adam', metrics=['accuracy']) 

cnn_model.fit(train_generator, epochs=10)
           
# Evaluate on test data   
cnn_model.evaluate(test_data)
